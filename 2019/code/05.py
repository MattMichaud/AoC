POSITION = '0'
IMMEDIATE = '1'

def intcode_compuer(program, inp, print_out=False):
    terminated = False
    ip = 0
    last_output = None
    while not terminated:
        inst = str(program[ip]).zfill(5)
        p1_mode = inst[2]
        p2_mode = inst[1]
        p3_mode = inst[0]
        opcode = int(inst[-2:])
        if opcode in (1,2):
            A = program[ip + 1] if p1_mode == IMMEDIATE else program[program[ip + 1]]
            B = program[ip + 2] if p2_mode == IMMEDIATE else program[program[ip + 2]]
            write_address = program[ip + 3]
            if opcode == 1:
                program[write_address] = A + B
            elif opcode == 2:
                program[write_address] = A * B
            ip += 4
        elif opcode == 3:
            write_address = program[ip + 1]
            program[write_address] = inp
            ip += 2
        elif opcode == 4:
            A = program[ip + 1] if p1_mode == IMMEDIATE else program[program[ip + 1]]
            if print_out: print('Output:', A, 'at position', ip)
            last_output = A
            ip += 2
        elif opcode in (5,6):
            A = program[ip + 1] if p1_mode == IMMEDIATE else program[program[ip + 1]]
            B = program[ip + 2] if p2_mode == IMMEDIATE else program[program[ip + 2]]
            if opcode == 5 and A != 0: ip = B
            elif opcode == 6 and A == 0: ip = B
            else: ip += 3
        elif opcode in (7,8):
            A = program[ip + 1] if p1_mode == IMMEDIATE else program[program[ip + 1]]
            B = program[ip + 2] if p2_mode == IMMEDIATE else program[program[ip + 2]]
            write_address = program[ip + 3]
            if opcode == 7 and A < B:program[write_address] = 1
            elif opcode == 8 and A == B: program[write_address] = 1
            else: program[write_address] = 0
            ip += 4
        elif opcode == 99:
            terminated = True
    return(last_output)


puzzle_input = '''3,225,1,225,6,6,1100,1,238,225,104,0,2,136,183,224,101,-5304,224,224,4,224,1002,223,8,223,1001,224,6,224,1,224,223,223,1101,72,47,225,1101,59,55,225,1101,46,75,225,1101,49,15,224,101,-64,224,224,4,224,1002,223,8,223,1001,224,5,224,1,224,223,223,102,9,210,224,1001,224,-270,224,4,224,1002,223,8,223,1001,224,2,224,1,223,224,223,101,14,35,224,101,-86,224,224,4,224,1002,223,8,223,101,4,224,224,1,224,223,223,1102,40,74,224,1001,224,-2960,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1101,10,78,225,1001,39,90,224,1001,224,-149,224,4,224,102,8,223,223,1001,224,4,224,1,223,224,223,1002,217,50,224,1001,224,-1650,224,4,224,1002,223,8,223,1001,224,7,224,1,224,223,223,1102,68,8,225,1,43,214,224,1001,224,-126,224,4,224,102,8,223,223,101,3,224,224,1,224,223,223,1102,88,30,225,1102,18,80,225,1102,33,28,225,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,108,677,677,224,102,2,223,223,1005,224,329,1001,223,1,223,1107,677,226,224,102,2,223,223,1006,224,344,1001,223,1,223,108,226,226,224,102,2,223,223,1005,224,359,1001,223,1,223,1108,677,226,224,102,2,223,223,1006,224,374,101,1,223,223,108,677,226,224,102,2,223,223,1006,224,389,1001,223,1,223,107,226,226,224,102,2,223,223,1005,224,404,1001,223,1,223,8,226,226,224,102,2,223,223,1006,224,419,101,1,223,223,1107,677,677,224,102,2,223,223,1006,224,434,1001,223,1,223,1107,226,677,224,1002,223,2,223,1006,224,449,101,1,223,223,7,677,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,1108,226,677,224,1002,223,2,223,1005,224,479,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,224,494,101,1,223,223,7,226,677,224,102,2,223,223,1005,224,509,101,1,223,223,1008,677,226,224,102,2,223,223,1006,224,524,101,1,223,223,8,226,677,224,1002,223,2,223,1006,224,539,1001,223,1,223,1007,677,677,224,102,2,223,223,1005,224,554,101,1,223,223,107,226,677,224,1002,223,2,223,1005,224,569,1001,223,1,223,1108,677,677,224,1002,223,2,223,1006,224,584,1001,223,1,223,1008,226,226,224,1002,223,2,223,1005,224,599,101,1,223,223,1008,677,677,224,102,2,223,223,1005,224,614,101,1,223,223,7,677,226,224,1002,223,2,223,1005,224,629,1001,223,1,223,107,677,677,224,1002,223,2,223,1006,224,644,101,1,223,223,1007,226,677,224,1002,223,2,223,1005,224,659,1001,223,1,223,1007,226,226,224,102,2,223,223,1005,224,674,101,1,223,223,4,223,99,226'''
part1 = [int(c) for c in puzzle_input.split(',')]
print('Part 1 Answer:',intcode_compuer(part1, 1))
part2 = [int(c) for c in puzzle_input.split(',')]
print('Part 2 Answer:',intcode_compuer(part2, 5))